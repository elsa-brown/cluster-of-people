{"mappings":"IAIAA,EAAe,C,UCEG,IAChB,IAAIC,SAAQ,CAACC,EAASC,KACpB,MAAMC,EAAaC,aAAaC,QAAQ,QAEpCF,EACFF,EAAQK,KAAKC,MAAMJ,IAEnBK,MATc,yIAUXC,MAAMC,IACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAEX,MAAM,IAAIC,MAAM,eAAeH,EAAII,UAAUJ,EAAIK,aAAY,IAGhEN,MAAMO,IACLZ,aAAaa,QAAQ,OAAQX,KAAKY,UAAUF,IAC5Cf,EAAQe,EAAA,IAETG,OAAOC,GAAQlB,EAAOkB,IAAA,I,UCzBZC,IACjB,MAAMC,MAAEA,EAAKC,QAAEA,EAAOC,IAAEA,GAAQH,EAE1BI,EAAgBF,EACnBG,OACAC,QAAQ,iBAAkB,IAC1BC,MAAM,uBACFC,EAAMC,GAAUL,EAKvB,MAAO,C,MAAEH,EAAOC,QAAS,CAJTM,EAAKD,MAAM,gBAIQE,GAASN,IAF1BA,EAAIG,QAAQ,OAAQ,SAEqB,E,qBCZhC,IACRI,OAAOC,WAAW,2BAA2BC,QAC5C,WAAa,aCAnC,MAAMC,aAAEC,EAAYC,UAAEC,EAASC,UAAEC,EAASC,qBAAEC,GAAyB1C,EAGrE,IAAI2C,EAAgBC,EAEpB,MAUMC,EAAoB,KAEJ,aADAH,KALpBC,EAAeG,UAAUC,OAAO,QAChCH,EAAgBE,UAAUE,IAAI,UAN9BL,EAAeG,UAAUE,IAAI,QAC7BJ,EAAgBE,UAAUC,OAAO,QAc/Bf,OAAOiB,SAAS,EAAG,GACrB,EAGIC,EAAOC,UAEXR,EAAiBS,SAASC,cAAc,gBACxCT,EAAkBQ,SAASC,cAAc,iBAEzCR,IACAb,OAAOsB,iBAAiB,SAAUT,GAGlC,MAAMvB,QAAiBgB,KACjBf,MAAEA,EAAKC,QAAEA,SAAkBgB,EAAUlB,IACpCiC,EAASxB,GAAUP,EAEpBgC,EAAOJ,SAASC,cAAc,QAE9BI,EAAKb,EAAgBS,cAAc,MACnCK,EAAON,SAASO,cAAc,KACpCD,EAAKE,KAzCW,kDA0ChBF,EAAKG,OAAS,SACdH,EAAKI,IAAM,sBACXJ,EAAKK,UAAYxC,EACjBkC,EAAGO,YAAYN,GAEf,MAAMO,EAAcb,SAASO,cAAc,WAC3CM,EAAYC,UAAY,OACxBV,EAAKQ,YAAYC,GAEjB,MAAME,EAAWf,SAASO,cAAc,OACxCQ,EAASD,UAAY,OACrBD,EAAYD,YAAYG,GAExB,MAAMC,EAAYhB,SAASO,cAAc,OACzCS,EAAUF,UAAY,aACtBC,EAASH,YAAYI,GAErBb,EAAQc,SAASC,IACf,MAAMC,EAAInB,SAASO,cAAc,KACjCY,EAAER,UAAYO,EACdF,EAAUJ,YAAYO,EAAA,IAGxB,MAAMC,EAAepB,SAASO,cAAc,WAC5Ca,EAAaN,UAAY,SACzBV,EAAKQ,YAAYQ,GACjBA,EAAaT,UAAYhC,EACzByC,EAAaC,mBAAmB,YAAa,UAE7C,MAAMC,EAAetB,SAASC,cAAc,UACtCsB,EAAcvB,SAASC,cAAc,iBAC3CsB,EAAYrB,iBAAiB,SAAS,KACpCqB,EAAY7B,UAAU8B,OAAO,aAC7BF,EAAa5B,UAAU8B,OAAO,QAC9BF,EAAa5B,UAAU8B,OAAO,YAChC,EAG0B,YAAxBxB,SAASyB,WACX7C,OAAOsB,iBAAiB,mBAAoBJ,GAE5CA","sources":["src/lib/index.js","src/lib/fetchPoem.js","src/lib/parsePoem.js","src/lib/getScreenOrientation.js","src/index.js"],"sourcesContent":["import fetchPoem from \"./fetchPoem\";\nimport parsePoem from \"./parsePoem\";\nimport getScreenOrientation from \"./getScreenOrientation\";\n\nexport default { fetchPoem, parsePoem, getScreenOrientation };\n","const API_URL = \"https://www.googleapis.com/blogger/v3/blogs\";\nconst API_KEY = \"AIzaSyAXjsB22TjNEYJy-HDC-bpMvIs9BOqxRi4\";\nconst BLOG_ID = \"7016348522142105165\";\nconst POST_ID = \"8040682582405624765\";\nconst blogPostUrl = `${API_URL}/${BLOG_ID}/posts/${POST_ID}?key=${API_KEY}`;\n\nconst fetchPoem = () =>\n  new Promise((resolve, reject) => {\n    const cachedPoem = localStorage.getItem(\"poem\");\n\n    if (cachedPoem) {\n      resolve(JSON.parse(cachedPoem));\n    } else {\n      fetch(blogPostUrl)\n        .then((res) => {\n          if (res.ok) {\n            return res.json();\n          } else {\n            throw new Error(`BLOGGER API ${res.status} ${res.statusText}`);\n          }\n        })\n        .then((data) => {\n          localStorage.setItem(\"poem\", JSON.stringify(data));\n          resolve(data);\n        })\n        .catch((err) => reject(err));\n    }\n  });\n\nexport default fetchPoem;\n","const parsePoem = (poemHTML) => {\n  const { title, content, url } = poemHTML;\n\n  const textAndImages = content\n    .trim()\n    .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n    .split(`<br /><br /><br />`);\n  const [text, images] = textAndImages;\n  const stanzas = text.split(`<br /><br />`);\n\n  const secureUrl = url.replace(\"http\", \"https\");\n\n  return { title, content: [stanzas, images], url: secureUrl };\n};\n\nexport default parsePoem;\n","const getScreenOrientation = () => {\n  const isPortrait = window.matchMedia(\"(orientation: portrait)\").matches;\n  return isPortrait ? \"portrait\" : \"landscape\";\n};\n\nexport default getScreenOrientation;\n","import lib from \"./lib\";\n\nconst { errorMessage, fetchPoem, parsePoem, getScreenOrientation } = lib;\nconst githubUrl = \"https://github.com/elsa-brown/cluster-of-people\";\n\nlet headerPortrait, headerLandscape;\n\nconst showHeaderLandscape = () => {\n  headerPortrait.classList.add(\"hide\");\n  headerLandscape.classList.remove(\"hide\");\n};\n\nconst showHeaderPortrait = () => {\n  headerPortrait.classList.remove(\"hide\");\n  headerLandscape.classList.add(\"hide\");\n};\n\nconst updateOrientation = () => {\n  const orientation = getScreenOrientation();\n  if (orientation === \"portrait\") {\n    showHeaderPortrait();\n  } else {\n    showHeaderLandscape();\n    window.scrollTo(0, 1);\n  }\n};\n\nconst init = async () => {\n  /* Orientation setup */\n  headerPortrait = document.querySelector(\".js-portrait\");\n  headerLandscape = document.querySelector(\".js-landscape\");\n\n  updateOrientation();\n  window.addEventListener(\"resize\", updateOrientation);\n\n  /* Get and show poem */\n  const poemHTML = await fetchPoem();\n  const { title, content } = await parsePoem(poemHTML);\n  const [stanzas, images] = content;\n\n  const main = document.querySelector(\"main\");\n\n  const h1 = headerLandscape.querySelector(\"h1\");\n  const link = document.createElement(\"a\");\n  link.href = githubUrl;\n  link.target = \"_blank\";\n  link.rel = \"noopener noreferrer\";\n  link.innerHTML = title;\n  h1.appendChild(link);\n\n  const textSection = document.createElement(\"section\");\n  textSection.className = \"text\";\n  main.appendChild(textSection);\n\n  const textWrap = document.createElement(\"div\");\n  textWrap.className = \"wrap\";\n  textSection.appendChild(textWrap);\n\n  const innerWrap = document.createElement(\"div\");\n  innerWrap.className = \"wrap-inner\";\n  textWrap.appendChild(innerWrap);\n\n  stanzas.forEach((stanza) => {\n    const p = document.createElement(\"p\");\n    p.innerHTML = stanza;\n    innerWrap.appendChild(p);\n  });\n\n  const imageSection = document.createElement(\"section\");\n  imageSection.className = \"images\";\n  main.appendChild(imageSection);\n  imageSection.innerHTML = images;\n  imageSection.insertAdjacentHTML(\"beforeend\", \"<br />\");\n\n  const aboutSection = document.querySelector(\".about\");\n  const aboutButton = document.querySelector(\".about-button\");\n  aboutButton.addEventListener(\"click\", () => {\n    aboutButton.classList.toggle(\"collapsed\");\n    aboutSection.classList.toggle(\"grow\");\n    aboutSection.classList.toggle(\"shrink\");\n  });\n};\n\nif (document.readyState === \"loading\") {\n  window.addEventListener(\"DOMContentLoaded\", init);\n} else {\n  init();\n}\n"],"names":["$1f69e5e4f608a8a1$export$2e2bcd8739ae039","Promise","resolve","reject","cachedPoem","localStorage","getItem","JSON","parse","fetch","then","res","ok","json","Error","status","statusText","data","setItem","stringify","catch","err","poemHTML","title","content","url","textAndImages","trim","replace","split","text","images","window","matchMedia","matches","errorMessage","$35da740d59af89ba$var$errorMessage","fetchPoem","$35da740d59af89ba$var$fetchPoem","parsePoem","$35da740d59af89ba$var$parsePoem","getScreenOrientation","$35da740d59af89ba$var$getScreenOrientation","$35da740d59af89ba$var$headerPortrait","$35da740d59af89ba$var$headerLandscape","$35da740d59af89ba$var$updateOrientation","classList","remove","add","scrollTo","$35da740d59af89ba$var$init","async","document","querySelector","addEventListener","stanzas","main","h1","link","createElement","href","target","rel","innerHTML","appendChild","textSection","className","textWrap","innerWrap","forEach","stanza","p","imageSection","insertAdjacentHTML","aboutSection","aboutButton","toggle","readyState"],"version":3,"file":"index.28b6c44b.js.map"}